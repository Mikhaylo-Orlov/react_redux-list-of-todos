{"version":3,"sources":["features/currentTodo.ts","features/filter.ts","features/todos.ts","app/store.ts","components/TodoList/TodoList.tsx","app/hooks.ts","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["actions","todo","type","payload","currentTodoReducer","state","arguments","length","undefined","action","_objectSpread","initialState","query","status","filterReducer","todosReducer","todos","_toConsumableArray","rootReducer","combineReducers","currentTodo","filter","store","createStore","composeWithDevTools","applyMiddleware","thunk","TodoList","_ref","handleTodoInfo","_jsxs","className","children","_jsx","map","classNames","id","completed","title","onClick","userId","useAppDispatch","useDispatch","useAppSelector","useSelector","TodoFilter","dispatch","_useState","useState","_useState2","_slicedToArray","search","setSearch","value","onChange","event","filterActions","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","handleCloseModal","user","setUser","_useState3","_useState4","loading","setLoading","useEffect","concat","getUser","finally","href","email","name","App","error","setError","_useState5","_useState6","setUserId","_useAppSelector","fetchData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","todosFromServer","wrap","_context","prev","next","sent","todosActions","t0","finish","stop","apply","visibleTodos","useMemo","copyArrayTodos","trim","toLowerCase","includes","_Fragment","currentTodoActions","Root","Provider","Router","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b0a72e5d.chunk.js","sourcesContent":["import { Todo } from '../types/Todo';\n\n// we use string literal as a type to avoid mistype in future\ntype RemoveTodoAction = { type: 'currentTodo/REMOVE' };\n\n// payload is a typical name for an action data\ntype SetTodoAction = {\n  type: 'currentTodo/SET';\n  payload: Todo;\n};\n\n// Action creator return type protect us from a mistype\nconst removeTodo = (): RemoveTodoAction => ({ type: 'currentTodo/REMOVE' });\n\nconst setTodo = (todo: Todo): SetTodoAction => ({\n  type: 'currentTodo/SET',\n  payload: todo,\n});\n\n// These actions will be used in the application\nexport const actions = { setTodo, removeTodo };\n\ntype State = Todo | null;\ntype Action = SetTodoAction | RemoveTodoAction;\n\nconst currentTodoReducer = (\n  state: State = null,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'currentTodo/SET':\n      return { ...action.payload };\n\n    case 'currentTodo/REMOVE':\n      return null;\n\n    default:\n      return state;\n  }\n};\n\nexport default currentTodoReducer;\n","import { Status } from '../types/Status';\n\ntype SetStatusAction = {\n  type: 'filter/SET_STATUS',\n  payload: Status,\n};\n\ntype QueryAction = {\n  type: 'filter/SET_QUERY',\n  payload: string,\n};\n\ntype ClearAction = {\n  type: 'filter/CLEAR'\n};\n\nconst setStatus = (payload: Status): SetStatusAction => ({\n  type: 'filter/SET_STATUS',\n  payload,\n});\n\nconst setSearch = (payload: string): QueryAction => ({\n  type: 'filter/SET_QUERY',\n  payload,\n});\n\nconst clear = (): ClearAction => ({ type: 'filter/CLEAR' });\n\nexport const actions = { setStatus, setSearch, clear };\n\ntype State = {\n  query: string,\n  status: string,\n};\n\ntype Action = SetStatusAction | QueryAction | ClearAction;\n\nconst initialState = { query: '', status: 'all' };\n\nconst filterReducer = (\n  state: State = initialState,\n  action: Action,\n): State => {\n  switch (action.type) {\n    case 'filter/SET_STATUS':\n      return { ...state, status: action.payload };\n\n    case 'filter/SET_QUERY':\n      return { ...state, query: action.payload };\n\n    case 'filter/CLEAR':\n      return { ...state, query: '' };\n\n    default:\n      return state;\n  }\n};\n\nexport default filterReducer;\n","import { Todo } from '../types/Todo';\n\ntype Todos = Todo[];\n\ntype AddTodos = {\n  type: 'todos/ADD',\n  payload: Todos,\n};\n\nconst set = (payload: Todos): AddTodos => ({\n  type: 'todos/ADD',\n  payload,\n});\n\nexport const actions = { set };\n\ntype Action = AddTodos;\n\nconst todosReducer = (\n  todos: Todos = [],\n  action: Action,\n): Todos => {\n  switch (action.type) {\n    case 'todos/ADD':\n      return [...action.payload];\n\n    default:\n      return todos;\n  }\n};\n\nexport default todosReducer;\n","import { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\n\nimport currentTodoReducer from '../features/currentTodo';\nimport filterReducer from '../features/filter';\nimport todosReducer from '../features/todos';\n\nconst rootReducer = combineReducers({\n  currentTodo: currentTodoReducer,\n  filter: filterReducer,\n  todos: todosReducer,\n});\n\n// The `store` is passed to the Provider in `/src/index.tsx`\nexport const store = createStore(\n  rootReducer,\n  composeWithDevTools(\n    applyMiddleware(thunk),\n  ),\n);\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","/* eslint-disable max-len */\nimport React from 'react';\nimport classNames from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  currentTodo: Todo | null,\n  handleTodoInfo: (id: number, todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  currentTodo,\n  handleTodoInfo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={classNames(\n            {\n              'has-background-info-light': currentTodo?.id === todo.id,\n            },\n          )}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n\n          <td className=\"is-vcentered is-expanded\">\n            <p\n              className={classNames(\n                {\n                  'has-text-danger': !todo.completed,\n                  'has-text-success': todo.completed,\n                },\n              )}\n            >\n              {todo.title}\n            </p>\n          </td>\n\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => handleTodoInfo(todo.userId, todo)}\n            >\n              <span className=\"icon\">\n                <i\n                  className={classNames(\n                    'far',\n                    {\n                      'fa-eye-slash': currentTodo?.id === todo.id,\n                      'fa-eye': currentTodo?.id !== todo.id,\n                    },\n                  )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport { AppDispatch, RootState } from './store';\n\nexport const useAppDispatch: () => AppDispatch = useDispatch;\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useState } from 'react';\nimport { useAppDispatch, useAppSelector } from '../../app/hooks';\nimport { actions as filterActions } from '../../features/filter';\nimport { Status } from '../../types/Status';\n\nexport const TodoFilter: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const { status } = useAppSelector(state => state.filter);\n  const [search, setSearch] = useState('');\n\n  const handleChangeSortBy = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    dispatch(filterActions.setStatus(event.target.value as Status));\n  };\n\n  const handleChangeQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(event.target.value);\n    dispatch(filterActions.setSearch(event.target.value));\n  };\n\n  const handleDeleteQuery = () => {\n    dispatch(filterActions.clear());\n    setSearch('');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={status}\n            onChange={handleChangeSortBy}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={search}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          {search && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              aria-label=\"deleteSearch\"\n              onClick={handleDeleteQuery}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\nimport { useAppSelector } from '../../app/hooks';\n\ntype Props = {\n  userId: number,\n  handleCloseModal?: () => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  userId,\n  handleCloseModal,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [loading, setLoading] = useState(false);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n\n  useEffect(() => {\n    setLoading(true);\n    if (userId) {\n      getUser(userId)\n        .then(setUser)\n        .finally(() => setLoading(false));\n    }\n  }, [userId]);\n\n  return (\n    <div\n      className={classNames(\n        'modal',\n        {\n          'is-active': currentTodo,\n        },\n      )}\n      data-cy=\"modal\"\n    >\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {' '}\n              {currentTodo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              aria-label=\"Close\"\n              onClick={handleCloseModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {currentTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {currentTodo?.completed\n                ? (<strong className=\"has-text-success\">Done</strong>)\n                : (<strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos } from './api';\nimport { useAppDispatch, useAppSelector } from './app/hooks';\nimport { actions as todosActions } from './features/todos';\nimport { actions as currentTodoActions } from './features/currentTodo';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [userId, setUserId] = useState(0);\n  const todos = useAppSelector(state => state.todos);\n  const { status, query } = useAppSelector(state => state.filter);\n  const currentTodo = useAppSelector(state => state.currentTodo);\n  const dispatch = useAppDispatch();\n\n  const fetchData = async () => {\n    setLoading(true);\n    try {\n      const todosFromServer = await getTodos();\n\n      dispatch(todosActions.set(todosFromServer));\n    } catch {\n      setError(true);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n  }, []);\n\n  const visibleTodos = useMemo(() => {\n    let copyArrayTodos = [...todos];\n\n    if (query.trim() !== '') {\n      copyArrayTodos = copyArrayTodos.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n    }\n\n    switch (status) {\n      case 'active':\n        return (copyArrayTodos.filter(todo => !todo.completed));\n\n      case 'completed':\n        return (copyArrayTodos.filter(todo => todo.completed));\n\n      default:\n        return copyArrayTodos;\n    }\n  }, [todos, status, query]);\n\n  const handleTodoInfo = (id: number, todo: Todo) => {\n    setUserId(id);\n    dispatch(currentTodoActions.setTodo(todo));\n  };\n\n  const handleCloseModal = () => {\n    setUserId(0);\n    dispatch(currentTodoActions.removeTodo());\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {loading && <Loader />}\n\n              {!loading\n                && (\n                  <TodoList\n                    todos={visibleTodos}\n                    currentTodo={currentTodo}\n                    handleTodoInfo={handleTodoInfo}\n                  />\n                )}\n\n              {error && (\n                <p className=\"notification is-warning\">\n                  There are no todos on server\n                </p>\n              )}\n\n              {!visibleTodos.length && query && (\n                <p className=\"notification is-warning\">\n                  There are no todos matching current filter criteria\n                </p>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {currentTodo && (\n        <TodoModal\n          userId={userId}\n          handleCloseModal={handleCloseModal}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport { store } from './app/store';\nimport { App } from './App';\n\n// Just a convenient component with all the wrappers for the `App`\n// The Router component (if you use it) should be placed inside the Provider\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}